---
hxr_custom_group:
  name: sentry
hxr_custom_user:
  name: sentry
  comment: "Sentry User"
  shell: /sbin/nologin
  extra_groups:
    - docker

hxr_sentry_datadir: /data/vol/sentry
hxr_sentry_repodir: /sentry

usegalaxy_eu_autofs_mounts:
  - vdb

certbot_auto_renew_extra: "--preferred-challenges http-01 --http-01-port 8118"
certbot_post_renewal: |
    systemctl restart nginx || true

nginx_remove_default_vhost: true
nginx_vhosts:
  - listen: "80"
    server_name: "{{ hostname }}"
    return: "301 https://{{ hostname }}$request_uri"
    filename: "{{ hostname }}.80.conf"

  - listen: "443 ssl"
    server_name: "{{ hostname }}"
    root: "/var/www/{{ hostname }}"
    index: "index.html"
    access_log: "/var/log/nginx/access.log"
    error_log: "/var/log/nginx/error.log"
    state: "present"
    filename: "{{ hostname }}.conf"
    extra_parameters: |
        proxy_set_header           Host $host;
        proxy_set_header           X-Forwarded-For $remote_addr;
        proxy_set_header           X-Forwarded-Proto $scheme;
        proxy_pass_request_headers on;
        proxy_redirect     off;
        #proxy_pass_request_headers on;
        # keepalive + raven.js is a disaster
        keepalive_timeout 0;
        # use very aggressive timeouts
        proxy_read_timeout 5s;
        proxy_send_timeout 5s;
        send_timeout 5s;
        client_body_timeout 5s;
        # buffer larger messages
        client_max_body_size 5m;
        client_body_buffer_size 100k;

        location / {
            proxy_pass                 http://127.0.0.1:8080;
        }

        location /.well-known/ {
            proxy_set_header           Host $host:$server_port;
            proxy_set_header           X-Real-IP $remote_addr;
            proxy_set_header           X-Forwarded-For $remote_addr;
            proxy_set_header           X-Forwarded-Proto $scheme;
            proxy_pass                 http://127.0.0.1:8118;
            proxy_pass_request_headers on;
        }

        ssl_certificate /etc/ssl/certs/{{ hostname }};
        ssl_certificate_key /etc/ssl/private/privkey.pem;

        ssl_protocols TLSv1.2;# Requires nginx >= 1.13.0 else use TLSv1.2
        ssl_prefer_server_ciphers on;
        #ssl_dhparam /etc/nginx/dhparam.pem; # openssl dhparam -out /etc/nginx/dhparam.pem 4096
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
        ssl_session_timeout  10m;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off; # Requires nginx >= 1.5.9
        ssl_stapling on; # Requires nginx >= 1.3.7
        ssl_stapling_verify on; # Requires nginx => 1.3.7

        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;

        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Robots-Tag none;

telegraf_plugins_extra:
  - plugin: statsd
    config:
      - protocol = "udp"
      - max_tcp_connections = 250
      - service_address = ":8125"
      - delete_gauges = true
      - delete_counters = true
      - delete_sets = true
      - delete_timings = true
      - percentiles = [90]
      - metric_separator = "."
      - parse_data_dog_tags = false
      - allowed_pending_messages = 10000
      - percentile_limit = 1000
